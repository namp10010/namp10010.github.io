[{"content":" AI is the new electricity — Unknown\n ","href":"/","title":"Home"},{"content":"","href":"/docs/","title":"Blog"},{"content":"I just noticed that I got the beta access to Codespaces and decided to try it out. I am writing this post using VS Code from Codespaces. My intension is to see if I can develop and test the flow for gohugo static web creation. First impression, the loading time wasn\u0026rsquo;t too bad. However, once loaded it didn\u0026rsquo;t even feel like I am coding on a remote IDE.\nTo my surprise, Codespace - which is a linux with GUI - comes loaded with a bunc of development tools including my new toy hugo. I later found that it\u0026rsquo;s possible to configure the image to suit your need.\n$ go version go version go1.15.1 linux/amd64 $ java -version openjdk version \u0026#34;11.0.8\u0026#34; 2020-07-14 OpenJDK Runtime Environment AdoptOpenJDK (build 11.0.8+10) OpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.8+10, mixed mode) $ kubectl version Client Version: version.Info{Major:\u0026#34;1\u0026#34;, Minor:\u0026#34;19\u0026#34;, GitVersion:\u0026#34;v1.19.0\u0026#34;, GitCommit:\u0026#34;e19964183377d0ec2052d1f1fa930c4d7575bd50\u0026#34;, GitTreeState:\u0026#34;clean\u0026#34;, BuildDate:\u0026#34;2020-08-26T14:30:33Z\u0026#34;, GoVersion:\u0026#34;go1.15\u0026#34;, Compiler:\u0026#34;gc\u0026#34;, Platform:\u0026#34;linux/amd64\u0026#34;} What\u0026rsquo;s more interesting is that I could seemlessly install a newer version of hugo.\n$ wget https://github.com/gohugoio/hugo/releases/download/v0.76.5/hugo_0.76.5_Linux-64bit.deb --omitted output-- hugo_0.76.5_Linux-64bit.deb.1 100%[========================\u0026gt;] 13.30M 5.18MB/s in 2.6s 2020-10-18 12:05:55 (5.18 MB/s) - ‘hugo_0.76.5_Linux-64bit.deb.1’ saved [13945876/13945876] $ sudo dpkg -i hugo_0.76.5_Linux-64bit.deb (Reading database ... 88062 files and directories currently installed.) Preparing to unpack hugo_0.76.5_Linux-64bit.deb ... Unpacking hugo (0.76.5) over (0.76.5) ... Setting up hugo (0.76.5) ... $ hugo version Hugo Static Site Generator v0.76.5-60F0725B linux/amd64 BuildDate: 2020-10-14T15:15:49Z Now that I have the latest version of hugo, I should be able to test this post.\n$ hugo server Start building sites … | EN -------------------+----- Pages | 37 Paginator pages | 0 Non-page files | 0 Static files | 21 Processed images | 0 Aliases | 10 Sitemaps | 1 Cleaned | 0 Built in 146 ms Watching for changes in /home/codespace/workspace/blog/{archetypes,content,data,static,themes} Watching for config changes in /home/codespace/workspace/blog/config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop It looked fine but there is no browser installed except for lynx. Here is what lynx looked like\n# namp10010 (p1 of 3) #namp10010 Skip to Main Menu [logo.png] I installed chromium but couldn\u0026rsquo;t launch it. To my rescue, I found an VS Code extension Browser Preview that could open localhost:1313 and show the page. I still don\u0026rsquo;t know how to take screenshot though.\nA problem at last, I couldn\u0026rsquo;t push the change to remote. It seemed that there was some network issue between the container and github.\nOn downside at the moment is I believe all settings will be gone once a codespace is disconnected as stated in Codespaces introduction\n A codespace is not fully resumable. Processes that were running at the time the codespace was stopped will not be restarted\n ","href":"/docs/github-codespaces-impression/","title":"Github Codespaces impression and hugo "},{"content":"In this quick tutorial, we will automate the deployment of Hugo generated static web contents to a github page using github action.\nPrerequisites   A main repo blog which is a Hugo web repo. This is where the github action will be set up\n  Generated static contents in public/ which is a git submodule which points to a github user page\ngit submodule add https://github.com/namp10010/namp10010.github.io.git public Follow Setup github user page to create your own user page.\n  Optional a theme minimo is installed under themes/minimo. (Please note I installed minimo as a clone)\n  Note Please note, this guide using main instead master as the default branch\nGithub action There are some existing github actions available for hugo deployment but they don\u0026rsquo;t do exactly what I want which is\n automatically build Hugo page deploy generated static contents to a github user page (as opposed to project page)  Therefore, I opted for a custom action\nDefine a new action in .github/actions/publisher/action.yml\nname: \u0026#34;hugo-publisher\u0026#34; description: \u0026#34;build and publish hugo pages to a remote repo\u0026#34; author: \u0026#34;namp10010\u0026#34; runs: using: \u0026#34;docker\u0026#34; image: \u0026#34;Dockerfile\u0026#34; This action will be run as a docker image built from a Dockerfile in the same directory .github/actions/publisher/Dockerfile\nFROMklakegg/hugo:0.74.3-alpineRUN apk add --no-cache git jq curlADD entrypoint.sh /RUN chmod +x /entrypoint.shENTRYPOINT [\u0026#34;/entrypoint.sh\u0026#34;]As the docker image will execute a script entrypoint.sh upon running, create this script in the same place .github/actions/publisher/entrypoint.sh\n#!/bin/sh set -e GITHUB_PAGE=\u0026#34;YOUR_GITHUB_USER_PAGE\u0026#34; GITHUB_EMAIL=\u0026#34;YOUR_EMAIL\u0026#34; GITHUB_USER=\u0026#34;YOUR_USER\u0026#34; cd ${GITHUB_WORKSPACE} hugo version || exit 1 # Clone existing pages from github page rm -rf public git clone --depth 1 https://$API_TOKEN_GITHUB@$GITHUB_PAGE public # Build the pages printf \u0026#34;\\033[0;32mBuilding static contents...\\033[0m\\n\u0026#34; hugo -t minimo # Publish printf \u0026#34;\\033[0;32mPublishing to github user page ${GITHUB_PAGE}...\\033[0m\\n\u0026#34; cd public git add . git config --global user.email $GITHUB_EMAIL git config --global user.name $GITHUB_USER msg=\u0026#34;rebuilding site $(date)\u0026#34; if [ -n \u0026#34;$*\u0026#34; ]; then msg=\u0026#34;$*\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; git push origin main Github Workflow The action is ready to use now, it just needs to be added to a workflow.\nCreate a file .github/workflows/publish.yml\nname: publish on: push: branches: - main jobs: publisher: name: publish to github page runs-on: ubuntu-latest steps: # Step 1 - Checks-out your repository under $GITHUB_WORKSPACE - name: Check out uses: actions/checkout@v2 with: submodules: true # Step 2 - run hugo-publisher - name: Run hugo-publisher uses: ./.github/actions/publisher env: API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }} GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} Important! you will need to create an personal access token for the github action to access the github page repo. Follow Create github access token to create one for your yourgithubaccount.github.io repo. The only access scope the token will need is repo \u0026gt; public_repo.\nAdd the token to the repo\u0026rsquo;s secrets with the name API_TOKEN_GITHUB by following adding secrets to your github repo.\nNow, let make a change to your web content in repo blog and push it up to main.\nReferences  Hugo Quick Start Minimo Installation Host hugo on github Setup github user page Create github access token Add secrets to github repo  ","href":"/docs/hugo-github-action/","title":"How to auto deploy Hugo contents with Github action"},{"content":" have been doing backend APIs and a bit of DevOps interested in looking out for development in AI currently having fun with golang and GCP  ","href":"/about/","title":"About"},{"content":"","href":"/authors/","title":"Authors"},{"content":"","href":"/categories/","title":"Categories"},{"content":"","href":"/tags/github-codespaces/","title":"github codespaces"},{"content":"","href":"/tags/hugo/","title":"hugo"},{"content":"","href":"/authors/namp10010/","title":"namp10010"},{"content":"","href":"/tags/","title":"Tags"},{"content":"","href":"/categories/tech/","title":"tech"},{"content":"","href":"/tags/github-action/","title":"github-action"},{"content":"","href":"/categories/tutorial/","title":"tutorial"},{"content":"","href":"/tags/config/","title":"Configuration"},{"content":"","href":"/tags/og/","title":"Opengraph"},{"content":"","href":"/page/","title":"Pages"},{"content":"","href":"/search/","title":"Search"},{"content":"","href":"/series/","title":"Series"}]
