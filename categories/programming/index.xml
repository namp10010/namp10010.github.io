<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on namp10010</title>
    <link>https://namp10010.github.io/categories/programming/</link>
    <description>Recent content in programming on namp10010</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Oct 2020 07:30:00 +1100</lastBuildDate>
    
	<atom:link href="https://namp10010.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang fluent pattern</title>
      <link>https://namp10010.github.io/docs/fluent-pattern-golang/</link>
      <pubDate>Sat, 24 Oct 2020 07:30:00 +1100</pubDate>
      
      <guid>https://namp10010.github.io/docs/fluent-pattern-golang/</guid>
      <description>Simple implementation of fluent pattern in Go.
Constructor style The gist of fluent pattern is returning the same object over and over again.
type email struct { from string to string subject string body string } func (e *email) withFrom(fr string) *email { e.from = fr return e } func (e *email) withTo(to string) *email { e.to = to return e } func (e *email) withSubject(s string) *email { e.subject = s return e } func (e *email) withBody(b string) *email { e.</description>
    </item>
    
  </channel>
</rss>